---
apiVersion: v1
kind: Namespace
metadata:
  name: registry

---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
  namespace: registry
type: Opaque
data:
  haSharedSecret: "eTdXUHN5eERCQVlhZ1F6Uw=="

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
  namespace: registry
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :31000
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1

---
apiVersion: v1
kind: Service
metadata:
  name: my
  namespace: registry
spec:
  type: NodePort
  ports:
    - port: 31000
      protocol: TCP
      name: registry
      targetPort: 31000
      nodePort: 31000
  selector:
    app: docker-registry

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my
  namespace: registry
spec:
  selector:
    matchLabels:
      app: docker-registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      nodeName: master
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: docker-registry
          image: "registry:2.7.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/registry
            - serve
            - /etc/docker/registry/config.yml
          ports:
            - containerPort: 31000
          livenessProbe:
            httpGet:
              path: /
              port: 31000
          readinessProbe:
            httpGet:
              path: /
              port: 31000
          env:
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: haSharedSecret
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
            - name: REGISTRY_HTTP_ADDR
              value: ":31000"
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: "my-config"
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          hostPath:
            path: /tmp/my-registry-data
            type: DirectoryOrCreate
        - name: my-config
          configMap:
            name: my-config


